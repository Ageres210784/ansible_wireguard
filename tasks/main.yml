---
- name: Create a list of peer names
  set_fact:
    wireguard_peers_names: "{{ wireguard_peers | map(attribute='name') | list }}"
    list_of_existing_peer_dirs: []
    list_of_peer_dirs: []
    list_of_new_peer_dirs: []
    list_of_new_peer_names: []
    wireguard_new_peers: []

- name: Create configuration directory
  file:
    dest: "{{ wireguard_directory }}"
    state: directory
    # TODO(sbog): change it from 0777 to according 0755 and fix user/group ownership
    mode: 0700
    owner: root
    group: root

- name: Find existing peers
  find:
    paths: "{{ wireguard_directory }}"
    patterns: "peer_*"
    file_type: "directory"
  register: dirs

- name: Create a list of existing peer directories
  set_fact:
    list_of_existing_peer_dirs: "{{ list_of_existing_peer_dirs }} + [ '{{ item.path }}' ]"
  with_items: "{{ dirs.files }}"

- name: Create a list of peer directoriers
  set_fact:
    list_of_peer_dirs: "{{ list_of_peer_dirs }} + [ '{{ wireguard_directory }}/peer_{{ item }}' ]"
  with_items: "{{ wireguard_peers_names }}"

- name: Create a list of new peer directories
  set_fact:
    list_of_new_peer_dirs: "{{ list_of_peer_dirs | difference(list_of_existing_peer_dirs) }}"

- name: Create a list of new peer names
  set_fact:
    list_of_new_peer_names: "{{ list_of_new_peer_names }} + [ '{{ item | split('/') | last | replace('peer_','') }}' ]"
  with_items: "{{ list_of_new_peer_dirs }}"
  
- name: Create a list of new peers
  set_fact:
    wireguard_new_peers: "{{ wireguard_new_peers }} + [ {{ item }} ]"
  when: item.name in list_of_new_peer_names
  loop: "{{ wireguard_peers }}"

- name: Start docker wireguard container
  community.docker.docker_compose:
    project_name: wireguard
    definition:
      version: '2'
      services:
        wireguard:
          image: "linuxserver/wireguard"
          container_name: "wireguard"
          ports:
            - "{{ wireguard_server_port }}:{{ wireguard_server_port }}/udp"
          volumes:
            - "/lib/modules:/lib/modules"
            - "{{ wireguard_directory }}:/config"
          hostname: "wireguard"
          restart: always
          labels: "{{ wireguard_docker_labels }}"
          cap_add:
            - NET_ADMIN
            - SYS_MODULE
          environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/Moscow
            - "SERVERURL={{ wireguard_server_url }}"
            - "SERVERPORT={{ wireguard_server_port }}"
            - "PEERS={{ wireguard_peers_names | join(',') }}"
            - "PEERDNS={{ wireguard_peers_dns | join(',') }}"
            - "INTERNAL_SUBNET={{ wireguard_internal_subnet }}"
            - "ALLOWEDIPS={{ wireguard_allowed_ips }}"
            - "LOG_CONFS={{ wireguard_log_confs }}"
      networks:
        default:
          external:
            name: "{{ wireguard_docker_network_name }}"

- name: Remove old peers' configs
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ list_of_existing_peer_dirs | default([]) | difference(list_of_peer_dirs) }}"

- name: Wait until the client confs is present before continuing
  wait_for:
    path: "{{ wireguard_directory }}/peer_{{ item }}/peer_{{ item }}.conf"
  with_items: "{{ wireguard_peers_names }}"
  tags: ['fetch_configs']

- name: Fetch configurations to localhost
  fetch:
    src: "{{ wireguard_directory }}/peer_{{ item }}/peer_{{ item }}.conf"
    dest: "/tmp/wireguard_vpn/peer_{{ item }}.conf"
    flat: yes
  with_items: "{{ wireguard_peers_names }}"
  tags: ['fetch_configs']

- name: Fetch qr codes to localhost
  fetch:
    src: "{{ wireguard_directory }}/peer_{{ item }}/peer_{{ item }}.png"
    dest: "/tmp/wireguard_vpn/peer_{{ item }}.png"
    flat: yes
  with_items: "{{ wireguard_peers_names }}"
  tags: ['fetch_configs']

- name: Send config to users email
  mail:
    host: "{{ wireguard_mail.host }}"
    port: "{{ wireguard_mail.port }}"
    username: "{{ wireguard_mail.user }}"
    sender: "{{ wireguard_mail.user }}"
    password: "{{ wireguard_mail.secret }}"
    to: "{{ item.email }}"
    subject: "{{ wireguard_mail.subject }}"
    body: "{{ wireguard_mail.body }}"
    attach: 
      - "{{ wireguard_directory }}/peer_{{ item.name }}/peer_{{ item.name }}.conf"
      - "{{ wireguard_directory }}/peer_{{ item.name }}/peer_{{ item.name }}.png"
  when: item.email is defined and wireguard_mail.host is defined 
  with_items: "{{ wireguard_new_peers }}"
  failed_when: False
  tags: ['fetch_configs']
